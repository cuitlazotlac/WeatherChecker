[{"/Users/hayssem/WORKSPACE/WeatherChecker/src/index.js":"1","/Users/hayssem/WORKSPACE/WeatherChecker/src/App.js":"2","/Users/hayssem/WORKSPACE/WeatherChecker/src/components/shared/NavBar.js":"3"},{"size":482,"mtime":1619992504210,"results":"4","hashOfConfig":"5"},{"size":7937,"mtime":1625192042075,"results":"6","hashOfConfig":"5"},{"size":506,"mtime":1618539791747,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1x4yh5q",{"filePath":"11","messages":"12","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/hayssem/WORKSPACE/WeatherChecker/src/index.js",[],["17","18"],"/Users/hayssem/WORKSPACE/WeatherChecker/src/App.js",["19","20","21","22","23","24","25","26"],"import React, { useState } from \"react\";\nimport { NavBar } from \"./components/shared/NavBar\";\n\nimport \"./App.scss\";\n\nimport sun_icon from \"../src/ressources/images/weather-icons/001-sun.svg\";\nimport cloud_icon from \"../src/ressources/images/weather-icons/002-cloud.svg\";\nimport heavy_rain_icon from \"../src/ressources/images/weather-icons/003-heavy-rain.svg\";\nimport wind_icon from \"../src/ressources/images/weather-icons/004-wind.svg\";\nimport fog_icon from \"../src/ressources/images/weather-icons/005-fog.svg\";\nimport snow_icon from \"../src/ressources/images/weather-icons/006-snow.svg\";\nimport thunderstorm_icon from \"../src/ressources/images/weather-icons/007-thunderstorm.svg\";\n\nconst api = {\n  key: \"73a1d313044c88b7374f061069884b21\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n  var img_src = \"\";\n  var img = new Image();\n  var img2 = document.createElement(\"img\"); // Use DOM HTMLImageElement\n\n  var imageName = require(\"../src/ressources/images/weather-icons/001-sun.svg\");\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setWeather(result);\n          setQuery(\"\");\n          // var link_1 = \"https://openweathermap.org/img/wn/\";\n          // var link_2 = \".png\";\n          // var link = link_1.concat(link_2);\n          switch (result.weather[0].main) {\n            case \"Thunderstorm\":\n              console.log(\"Mangoes and papayas are $1.79 a pound.\");\n              img_src.src = sun_icon;\n              break;\n            case \"Drizzle\":\n              console.log(\"Mangoes and papayas are $2.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Rain\":\n              console.log(\"Mangoes and papayas are $3.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Snow\":\n              console.log(\"Mangoes and papayas are $4.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Mist\":\n              console.log(\"Mangoes and papayas are $5.79 a pound.\");\n              img_src.src = sun_icon;\n              break;\n            case \"Smoke\":\n              console.log(\"Mangoes and papayas are $6.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Haze\":\n              console.log(\"Mangoes and papayas are $7.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"DustMist\":\n              console.log(\"Mangoes and papayas are $8.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Fog\":\n              console.log(\"Mangoes and papayas are $9.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Sand\":\n              console.log(\"Mangoes and papayas are $10.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Dust\":\n              console.log(\"Mangoes and papayas are $11.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Ash\":\n              console.log(\"Mangoes and papayas are $12.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Squall\":\n              console.log(\"Mangoes and papayas are $13.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Tornado\":\n              console.log(\"Mangoes and papayas are $14.79 a pound.\");\n              img_src = sun_icon;\n              break;\n            case \"Clear\":\n              console.log(\"Mangoes and papayas are $15.79 a pound.\");\n              img_src = \"../src/ressources/images/weather-icons/001-sun.svg\";\n              console.log(img_src);\n              img.src = \"../src/ressources/images/weather-icons/001-sun.svg\";\n              console.log(img);\n              img2.src = \"../src/ressources/images/weather-icons/001-sun.svg\";\n              console.log(img2);\n              break;\n            case \"Clouds\":\n              console.log(\"Mangoes and papayas are $16.79 a pound.\");\n              img_src = \"../src/ressources/images/weather-icons/001-sun.svg\";\n              break;\n            default:\n              console.log(`Sorry, we are out of ${result.weather[0].main}.`);\n          }\n        });\n    }\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    // here if nothing we put the app - if it's above 16 degres then we put use the class app warm\n    // it's here that we have to change the conditions to put continents background\n    <>\n      <NavBar />\n      <div\n        className={\n          typeof weather.main != \"undefined\"\n            ? weather.main.temp > 16\n              ? \"app warm\"\n              : \"app\"\n            : \"app\"\n        }\n      >\n        <main>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              className=\"search-bar\"\n              placeholder=\"Search...\"\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n          {typeof weather.main != \"undefined\" ? (\n            <div>\n              <div className=\"location-block\">\n                <div className=\"date\">{dateBuilder(new Date())}</div>\n                <div className=\"location\">\n                  {weather.name}, {weather.sys.country}\n                </div>\n                <div className=\"coord-lat\">\n                  Coord Latitude: {weather.coord.lat}\n                </div>\n                <div className=\"coord-lon\">\n                  Coord Longitude: {weather.coord.lon}\n                </div>\n              </div>\n\n              <div>\n                <div className=\"weather\">{weather.weather[0].main}</div>\n                <div className=\"weather\">{weather.weather[0].description}</div>\n              </div>\n\n              <div>\n                {/* <h2>\n                  Here goes the image\n                  <img src={img2} />\n                  <img src={imageName} />\n                </h2> */}\n                <img\n                  className=\"weather-icon\"\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\n                ></img>\n\n                {/* <img src={sun_icon} /> */}\n              </div>\n\n              {/* {Math.round(weather.main.temp)}°c */}\n              <div className=\"weather-block\">\n                <div className=\"main-temp\">{weather.main.temp}°c</div>\n                <div className=\"temp-max\">\n                  Temp Max: {weather.main.temp_max}°\n                </div>\n                <div className=\"temp-min\">\n                  Temp Min: {weather.main.temp_min}°\n                </div>\n                <div className=\"details-title\">Details</div>\n                <div className=\"temp-feeling\">\n                  Feels like: {weather.main.feels_like}°\n                </div>\n                <div className=\"humidity\">\n                  Humidity: {weather.main.humidity}\n                </div>\n                <div className=\"wind\">Wind: {weather.wind.speed}</div>\n              </div>\n            </div>\n          ) : (\n            \"Here goes the initial part\"\n          )}\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/Users/hayssem/WORKSPACE/WeatherChecker/src/components/shared/NavBar.js",[],["27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":18},{"ruleId":"33","severity":1,"message":"37","line":8,"column":8,"nodeType":"35","messageId":"36","endLine":8,"endColumn":23},{"ruleId":"33","severity":1,"message":"38","line":9,"column":8,"nodeType":"35","messageId":"36","endLine":9,"endColumn":17},{"ruleId":"33","severity":1,"message":"39","line":10,"column":8,"nodeType":"35","messageId":"36","endLine":10,"endColumn":16},{"ruleId":"33","severity":1,"message":"40","line":11,"column":8,"nodeType":"35","messageId":"36","endLine":11,"endColumn":17},{"ruleId":"33","severity":1,"message":"41","line":12,"column":8,"nodeType":"35","messageId":"36","endLine":12,"endColumn":25},{"ruleId":"33","severity":1,"message":"42","line":26,"column":7,"nodeType":"35","messageId":"36","endLine":26,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":199,"column":17,"nodeType":"45","endLine":202,"endColumn":18},{"ruleId":"29","replacedBy":"46"},{"ruleId":"31","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'cloud_icon' is defined but never used.","Identifier","unusedVar","'heavy_rain_icon' is defined but never used.","'wind_icon' is defined but never used.","'fog_icon' is defined but never used.","'snow_icon' is defined but never used.","'thunderstorm_icon' is defined but never used.","'imageName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["48"],["49"],"no-global-assign","no-unsafe-negation"]